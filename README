minecontrol
--------------------------------------------------------------------------------
A. Overview

"minecontrol" is an application that manages Minecraft (TM) server processes on
Linux systems. minecontrol provides a server daemon that implements a simple
text-based protocol for Minecraft server management. The purpose of the project
was to provide a simple and automated way to administer Minecraft servers on
Linux systems, while maintaining flexiblity and customization.

minecontrol provides a user-oriented approach to basic server administration,
meaning that a system user must authenticate themselves before a server process
can be started. Server processes are run with the permissions (UID) of the
authenticated user, and server data is stored in the ~/minecraft directory in
the user's home directory. Using different network service ports, minecontrol
can host servers run by a variety of users simultaneously. The minecontrol
server can limit the total number of server processes that it manages, and a
root user may stop any server at any time (as well as shutdown the minecontrol
server remotely). A user logs in to the minecontrol server using a minecontrol
client. This repository contains a standard command-line interface client
implementation for Linux systems. The user must then authenticate themselves
using their system password. Minecontrol clients encrypt this field using the
OpenSSL Crypto library. Once logged in, a user can issue commands provided by
the minecontrol protocol to start, stop, list, and perform other operations
on Minecraft server processes.

Each server is identified by a unique name that corresponds to the top-level
directory in ~/minecraft that contains the server data files. The minecontrol
server provides users with an interface to specify Minecraft server properties
when a server is started, either initially or upon successive start-ups. The
minecontrol server will overwrite the server.properties file with changed
properties (if any) each time a server process is spawned. This is useful 
especially for changing the network service port to which the server should
bind.

Once a server is started, the minecontrol server can time the process and
send the server the "stop" command when the time has expired. Optionally a
server may be set to unlimited time, in which case a user must manually stop
the server. minecontrol always attempts to cleanly shutdown the Minecraft
server by sending it the "stop" command. If the server process is not
responding after a pre-configured timeout, a SIGKILL is sent to the process.
A user may also extend the running time for a server via the EXTEND protocol
command.

The minecontrol server loads its own settings from the
/etc/minecontrold/minecontrol.init file. This file provides settings that the
minecontrol server loads each time it starts a new Minecraft server. These
settings include options such as the command-line used to spawn the Java
Minecraft process, maximum allowed servers at a time, default timeout for 
server processes, default server.properties settings to apply or override,
ETC. This file may be modified at any point while a minecontrol server is
running as the server reads the file when it begins a new Minecraft server
process.

Perhaps one of the more unique and interesting attributes of minecontrol is
its so-called "authority" functionality. Every Minecraft server process logs
messages to its stdout. These messages are identical to those found in the
server's log files. minecontrol exploits this behavior and intercepts log
messages. Acting as an authoritative server, the minecontrol server issues
simplified versions of these log messages to one or more "authority
programs". These authority programs receive messages from the minecontrol
server and can send commands to the Minecraft server. Each authority program
receives a copy of the log message (hence the term "authoritative"). Authority
programs can extend the functionality of a Minecraft server. For example,
this repository includes standard authority programs, one of which provides
in-game location journaling. Users may write their own authority programs
to extend the functionality of their Minecraft worlds. The minecontrol
protocol provides commands for starting and stopping authority programs,
and each server may include a minecontrol.exec file for specifying default
authority programs to run for a server. This repository includes a C API for
writing authority programs; authority programs are also effectively 
written using scripting languages like Python; in fact any programming language
is probably well suited to writing authority programs to extend a Minecraft
server (some certainly better than others).
--------------------------------------------------------------------------------
B. Building

minecontrol was built for Linux systems (think POSIX). You will need a C and C++
compiler to build this project. You will also need several external library
development files. The project makefile should be the simplest way to build this
project. Not accounting for compiler version differences (I used GCC 4.6.3 on
Ubuntu), the project should build with no errors or warnings.

Dependencies:
        [server]
        libssl-dev
        rlibrary

        [client]
        libncurses-dev
        rlibrary

The rlibrary dependency is a library project of mine.

For Debian distributions:

For pre-built Debian binary packages I provide a package repository. Add the
following to your /etc/apt/sources.list file:
    deb ftp://rserver.us/ stable main

Now you can run:
    $ apt-get update && apt-get install minecontrold
You might also need the client CLI tool:
    $ apt-get install minecontrol

Note that I do not guarantee the availability of the above site. If you would 
rather pull the package down directly here are the URLs for the i386 and amd64
builds respectively:
 [i386]
 ftp://rserver.us/dists/stable/main/binary-i386/minecontrold_1.2.1_i386.deb
 ftp://rserver.us/dists/stable/main/binary-i386/minecontrol_1.0_i386.deb
 ftp://rserver.us/dists/stable/main/binary-i386/libminecontrol-api1_1.0_i386.deb

 [amd64]
 ftp://rserver.us/dists/stable/main/binary-amd64/minecontrold_1.2.1_amd64.deb
 ftp://rserver.us/dists/stable/main/binary-amd64/minecontrol_1.0_amd64.deb
 ftp://rserver.us/dists/stable/main/binary-amd64/libminecontrol-api1_1.0_amd64.deb

All of these three packages are required to have a fully functioning standard 
installation. Again, I do not support or guarantee the availability of these
packages.
--------------------------------------------------------------------------------
C. Installation

If you use a Debian Linux distribution, building the .deb packages is the best
way to go. Included in the repository are several shell scripts that should
do this. Else the makefile has a local install rule. This will not install the
default /etc/minecontrold/minecontrol.init file that is included with the
repository.

The Debian packages will install an init.d script that will launch the
minecontrol daemon at boot-time. This also allows minecontrol to be managed
as a system service like so:
   $ service minecontrold start
   $ service minecontrold stop
The packages also provide several MAN pages that contain useful information on
the daemon, client tool and config files.
--------------------------------------------------------------------------------
D. Desiderata

 Copyright 2014 Roger Gee.  License GPLv3+: GNU GPL version 3 or later;
  consult <http://gnu.org/licenses/gpl.html>.
 Minecontrol is free software: you are free to change and redistribute it.
 There is NO WARRANTY and NO SUPPORT to the extent permitted by law.

I welcome bug reports to "Roger Gee" <rpg11a@acu.edu>.

Please respect the Minecraft EULA found here:
 https://account.mojang.com/documents/minecraft_eula
Be honest and buy legitamate copies of the Minecraft software.
